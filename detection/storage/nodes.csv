key,location,code,type
6,1,<global>,METHOD
7,1,"<empty>,<empty>","BLOCK,<empty>"
8,1,jbig2_word_stream_buf_get_next_word,METHOD
9,1,Jbig2WordStream * self,PARAM
10,1,int offset,PARAM
11,1,uint32_t * word,PARAM
12,1,"{
 Jbig2WordStreamBuf * z = ( Jbig2WordStreamBu...,{
 Jbig2WordStreamBuf * z = ( Jbig2WordStreamBu...","BLOCK,{
 Jbig2WordStreamBuf * z = ( Jbig2WordStreamBu..."
13,2,Jbig2WordStreamBuf* z: Jbig2WordStreamBuf*,LOCAL
14,2,* z = ( Jbig2WordStreamBuf * ) self,<operator>.assignment
15,2,"z,* z = ( Jbig2WordStreamBuf * ) self","IDENTIFIER,z"
16,2,( Jbig2WordStreamBuf * ) self,<operator>.cast
17,2,"Jbig2WordStreamBuf *,Jbig2WordStreamBuf *","UNKNOWN,Jbig2WordStreamBuf *"
18,2,"self,( Jbig2WordStreamBuf * ) self","IDENTIFIER,self"
19,3,const byte* data: byte*,LOCAL
20,3,* data = z -> data,<operator>.assignment
21,3,"data,* data = z -> data","IDENTIFIER,data"
22,3,z -> data,<operator>.indirectFieldAccess
23,3,"z,* data = z -> data","IDENTIFIER,z"
24,3,"data,data","FIELD_IDENTIFIER,data"
25,4,uint32_t result: uint32_t,LOCAL
26,5,"IF,if (offset + 4 < z -> size)","CONTROL_STRUCTURE,IF"
27,5,offset + 4 < z -> size,<operator>.lessThan
28,5,offset + 4,<operator>.addition
29,5,"offset,offset + 4","IDENTIFIER,offset"
30,5,"4,offset + 4","LITERAL,4"
31,5,z -> size,<operator>.indirectFieldAccess
32,5,"z,offset + 4 < z -> size","IDENTIFIER,z"
33,5,"size,size","FIELD_IDENTIFIER,size"
34,5,"<empty>,<empty>","BLOCK,<empty>"
35,5,result = ( data [ offset ] << 24 ) | ( data [ o...,<operator>.assignment
36,5,"result,result = ( data [ offset ] << 24 ) | ( data [ o...","IDENTIFIER,result"
37,5,( data [ offset ] << 24 ) | ( data [ offset + 1...,<operator>.or
38,5,( data [ offset ] << 24 ) | ( data [ offset + 1...,<operator>.or
39,5,( data [ offset ] << 24 ) | ( data [ offset + 1...,<operator>.or
40,5,data [ offset ] << 24,<operator>.shiftLeft
41,5,data [ offset ],<operator>.indirectIndexAccess
42,5,"data,data [ offset ] << 24","IDENTIFIER,data"
43,5,"offset,data [ offset ] << 24","IDENTIFIER,offset"
44,5,"24,data [ offset ] << 24","LITERAL,24"
45,5,data [ offset + 1 ] << 16,<operator>.shiftLeft
46,5,data [ offset + 1 ],<operator>.indirectIndexAccess
47,5,"data,data [ offset + 1 ] << 16","IDENTIFIER,data"
48,5,offset + 1,<operator>.addition
49,5,"offset,offset + 1","IDENTIFIER,offset"
50,5,"1,offset + 1","LITERAL,1"
51,5,"16,data [ offset + 1 ] << 16","LITERAL,16"
52,5,data [ offset + 2 ] << 8,<operator>.shiftLeft
53,5,data [ offset + 2 ],<operator>.indirectIndexAccess
54,5,"data,data [ offset + 2 ] << 8","IDENTIFIER,data"
55,5,offset + 2,<operator>.addition
56,5,"offset,offset + 2","IDENTIFIER,offset"
57,5,"2,offset + 2","LITERAL,2"
58,5,"8,data [ offset + 2 ] << 8","LITERAL,8"
59,5,data [ offset + 3 ],<operator>.indirectIndexAccess
60,5,"data,( data [ offset ] << 24 ) | ( data [ offset + 1...","IDENTIFIER,data"
61,5,offset + 3,<operator>.addition
62,5,"offset,offset + 3","IDENTIFIER,offset"
63,5,"3,offset + 3","LITERAL,3"
64,6,"ELSE,else","CONTROL_STRUCTURE,ELSE"
65,6,"<empty>,<empty>","BLOCK,<empty>"
66,6,"IF,if (offset > z -> size)","CONTROL_STRUCTURE,IF"
67,6,offset > z -> size,<operator>.greaterThan
68,6,"offset,offset > z -> size","IDENTIFIER,offset"
69,6,z -> size,<operator>.indirectFieldAccess
70,6,"z,offset > z -> size","IDENTIFIER,z"
71,6,"size,size","FIELD_IDENTIFIER,size"
72,6,"<empty>,<empty>","BLOCK,<empty>"
73,6,"return - 1 ;,return - 1 ;","RETURN,return - 1 ;"
74,6,- 1,<operator>.minus
75,6,"1,- 1","LITERAL,1"
76,7,"ELSE,else","CONTROL_STRUCTURE,ELSE"
77,7,"{
 int i ;
 result = 0 ;
 for ( i = 0 ;
 i < z ...,{
 int i ;
 result = 0 ;
 for ( i = 0 ;
 i < z ...","BLOCK,{
 int i ;
 result = 0 ;
 for ( i = 0 ;
 i < z ..."
78,8,int i: int,LOCAL
79,9,result = 0,<operator>.assignment
80,9,"result,result = 0","IDENTIFIER,result"
81,9,"0,result = 0","LITERAL,0"
82,10,"FOR,for (i = 0 ;i < z -> size - offset;i ++)","CONTROL_STRUCTURE,FOR"
83,10,"<empty>,<empty>","BLOCK,<empty>"
84,10,i = 0,<operator>.assignment
85,10,"i,i = 0","IDENTIFIER,i"
86,10,"0,i = 0","LITERAL,0"
87,11,i < z -> size - offset,<operator>.lessThan
88,11,"i,i < z -> size - offset","IDENTIFIER,i"
89,11,z -> size - offset,<operator>.subtraction
90,11,z -> size,<operator>.indirectFieldAccess
91,11,"z,z -> size - offset","IDENTIFIER,z"
92,11,"size,size","FIELD_IDENTIFIER,size"
93,11,"offset,z -> size - offset","IDENTIFIER,offset"
94,12,i ++,<operator>.postIncrement
95,12,"i,i ++","IDENTIFIER,i"
96,12,result |= data [ offset + i ] << ( ( 3 - i ) <<...,<operators>.assignmentOr
97,12,"result,result |= data [ offset + i ] << ( ( 3 - i ) <<...","IDENTIFIER,result"
98,12,data [ offset + i ] << ( ( 3 - i ) << 3 ),<operator>.shiftLeft
99,12,data [ offset + i ],<operator>.indirectIndexAccess
100,12,"data,data [ offset + i ] << ( ( 3 - i ) << 3 )","IDENTIFIER,data"
101,12,offset + i,<operator>.addition
102,12,"offset,offset + i","IDENTIFIER,offset"
103,12,"i,offset + i","IDENTIFIER,i"
104,12,( 3 - i ) << 3,<operator>.shiftLeft
105,12,3 - i,<operator>.subtraction
106,12,"3,3 - i","LITERAL,3"
107,12,"i,3 - i","IDENTIFIER,i"
108,12,"3,( 3 - i ) << 3","LITERAL,3"
109,14,* word = result,<operator>.assignment
110,14,* word,<operator>.indirection
111,14,"word,* word = result","IDENTIFIER,word"
112,14,"result,* word = result","IDENTIFIER,result"
113,15,"return 0 ;,return 0 ;","RETURN,return 0 ;"
114,15,"0,return 0 ;","LITERAL,0"
115,1,int,METHOD_RETURN
117,1,ANY,METHOD_RETURN
177,,<operator>.indirectIndexAccess,METHOD
178,,p1,PARAM
179,,p2,PARAM
180,,"<empty>,<empty>","BLOCK,<empty>"
181,,ANY,METHOD_RETURN
182,,<operator>.greaterThan,METHOD
183,,p1,PARAM
184,,p2,PARAM
185,,"<empty>,<empty>","BLOCK,<empty>"
186,,ANY,METHOD_RETURN
187,,<operator>.minus,METHOD
188,,p1,PARAM
189,,"<empty>,<empty>","BLOCK,<empty>"
190,,ANY,METHOD_RETURN
191,,<operator>.subtraction,METHOD
192,,p1,PARAM
193,,p2,PARAM
194,,"<empty>,<empty>","BLOCK,<empty>"
195,,ANY,METHOD_RETURN
196,,<operator>.postIncrement,METHOD
197,,p1,PARAM
198,,"<empty>,<empty>","BLOCK,<empty>"
199,,ANY,METHOD_RETURN
200,,<operators>.assignmentOr,METHOD
201,,p1,PARAM
202,,p2,PARAM
203,,"<empty>,<empty>","BLOCK,<empty>"
204,,ANY,METHOD_RETURN
205,,<operator>.indirection,METHOD
206,,p1,PARAM
207,,"<empty>,<empty>","BLOCK,<empty>"
208,,ANY,METHOD_RETURN
136,1,<global>,METHOD
137,,"<empty>,<empty>","BLOCK,<empty>"
138,,ANY,METHOD_RETURN
142,,<operator>.assignment,METHOD
143,,p1,PARAM
144,,p2,PARAM
145,,"<empty>,<empty>","BLOCK,<empty>"
146,,ANY,METHOD_RETURN
147,,<operator>.cast,METHOD
148,,p1,PARAM
149,,p2,PARAM
150,,"<empty>,<empty>","BLOCK,<empty>"
151,,ANY,METHOD_RETURN
152,,<operator>.indirectFieldAccess,METHOD
153,,p1,PARAM
154,,p2,PARAM
155,,"<empty>,<empty>","BLOCK,<empty>"
156,,ANY,METHOD_RETURN
157,,<operator>.lessThan,METHOD
158,,p1,PARAM
159,,p2,PARAM
160,,"<empty>,<empty>","BLOCK,<empty>"
161,,ANY,METHOD_RETURN
162,,<operator>.addition,METHOD
163,,p1,PARAM
164,,p2,PARAM
165,,"<empty>,<empty>","BLOCK,<empty>"
166,,ANY,METHOD_RETURN
167,,<operator>.or,METHOD
168,,p1,PARAM
169,,p2,PARAM
170,,"<empty>,<empty>","BLOCK,<empty>"
171,,ANY,METHOD_RETURN
172,,<operator>.shiftLeft,METHOD
173,,p1,PARAM
174,,p2,PARAM
175,,"<empty>,<empty>","BLOCK,<empty>"
176,,ANY,METHOD_RETURN
